---

- name: Check for existing root database credentials.
  ansible.builtin.stat:
    path: "{{ ansible_user_dir }}/.my.cnf"
  register: my_cnf

- name: Install random password generator.
  community.general.openbsd_pkg:
    name: pwgen
    state: present
  when: not my_cnf.stat.exists

- name: Generate a random database root password.
  ansible.builtin.command: pwgen -B -s 24 1
  register: mariadb_root_password
  ignore_errors: false
  when: not my_cnf.stat.exists

- name: "rcctl enable mysqld; rcctl start mysqld"
  ansible.builtin.service:
    name: mysqld
    state: started
    enabled: yes

- name: Get list of hosts for the root user.
  ansible.builtin.command: >
    mysql -NBe
    'SELECT Host FROM mysql.user WHERE User = "root" ORDER BY (Host="localhost") ASC'
  register: mariadb_root_hosts
  changed_when: false

- name: Update MySQL root password for localhost root account.
  ansible.builtin.shell: >
    mysql -u root -NBe
    'SET PASSWORD FOR "root"@"{{ item }}" = PASSWORD("{{ mariadb_root_password.stdout }}");'
  with_items:
    - "{{ mariadb_root_hosts.stdout_lines }}"
  when: mariadb_install_packages.changed and mariadb_root_password.changed

- name: Copy .my.cnf file with database root credentials.
  ansible.builtin.template:
    src: "user-my.cnf.j2"
    dest: "{{ ansible_user_dir }}/.my.cnf"
    owner: "{{ ansible_user_id }}"
    mode: 0600
  when: mariadb_root_password.changed

- name: Get list of hosts for the anonymous user.
  ansible.builtin.command: mysql -NBe 'SELECT Host FROM mysql.user WHERE User = ""'
  register: mariadb_anonymous_hosts
  changed_when: false

- name: Remove anonymous MariaDB users.
  community.mysql.mysql_user:
    name: ""
    host: "{{ item }}"
    state: absent
  with_items:
    - "{{ mariadb_anonymous_hosts.stdout_lines }}"

- name: Remove MariaDB test database.
  community.mysql.mysql_db:
    name: test
    state: absent
