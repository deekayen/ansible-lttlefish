---

- name: Install Dovecot.
  community.general.openbsd_pkg:
    name: "{{ item }}"
    state: present
  with_items:
    - dovecot
    - dovecot-mysql

- name: "rcctl stop smtpd; rcctl disable smtpd"
  service:
    name: smtpd
    state: stopped
    enabled: no

- name: Install Postfix.
  community.general.openbsd_pkg:
    name: "{{ item }}"
    state: present
  with_items:
    - postfix--mysql%stable
    - py-policyd-spf

- name: Stat /etc/mailer.conf.postfix
  stat:
    path: /etc/mailer.conf.postfix
  register: postfix_mailer_conf

- name: /usr/local/sbin/postfix-enable
  block:
  - name: Move default mailer config to .pre-postfix
    command: mv -f /etc/mailer.conf /etc/mailer.conf.pre-postfix

  - name: Move postfix mailer config into place.
    command: mv -f /etc/mailer.conf.postfix /etc/mailer.conf

  when: postfix_mailer_conf.stat.exists

- name: "rcctl enable postfix; rcctl start postfix"
  service:
    name: postfix
    state: started
    enabled: yes

- name: Install ClamAV.
  community.general.openbsd_pkg:
    name: "{{ item }}"
    state: present
  with_items:
    - clamav
    - clamav-unofficial-sigs

- name: Install OpenDKIM.
  community.general.openbsd_pkg:
    name: "{{ item }}"
    state: present
  with_items:
    - opendkim

- name: Install procmail.
  community.general.openbsd_pkg:
    name: procmail
    state: present

- name: Copy mailserver table SQL.
  ansible.builtin.copy:
    src: mailserver.sql
    dest: /tmp/mailserver.sql
    mode: 0644

- name: Install PyMySQL for mysql_db ansible support.
  ansible.builtin.pip:
    name:
      - PyMySQL
      - mysqlclient

- name: Create a database for mail configuration.
  community.mysql.mysql_db:
    name: "{{ mailserver_dbname }}"
    state: present
  register: mailserver_db_created

- name: Import mailserver database tables.
  # The import SQL file should have IF EXISTS on each CREATE.
  community.mysql.mysql_db:
    name: "{{ mailserver_dbname }}"
    state: import
    target: /tmp/mailserver.sql
  when: mailserver_db_created.changed

- name: Check for existing mail database user.
  ansible.builtin.stat:
    path: /etc/dovecot/dovecot-sql.conf.ext
  register: dovecot_sql

- name: Install random password generator.
  community.general.openbsd_pkg:
    name: pwgen
    state: present
  when: not dovecot_sql.stat.exists

- name: Generate a random database root password.
  ansible.builtin.command: pwgen -B -s 24 1
  register: mailserver_dbpass
  ignore_errors: false
  when: not dovecot_sql.stat.exists

- name: Create a database user for mail.
  community.mysql.mysql_user:
    name: "{{ mailserver_dbuser }}"
    password: "{{ mailserver_dbpass.stdout }}"
    priv: "{{ mailserver_dbname }}.*:SELECT"
    state: present
  when: not dovecot_sql.stat.exists and mailserver_dbpass.changed

- name: Generate DH Parameters for Dovecot.
  community.crypto.openssl_dhparam:
    path: /etc/dovecot/dh.pem
    size: 2048

- name: Generate DH Parameters for Postfix.
  community.crypto.openssl_dhparam:
    path: /etc/postfix/dh2048.pem
    size: 2048

- name: Generate export-level DH Parameters for Postfix.
  community.crypto.openssl_dhparam:
    path: /etc/postfix/dh512.pem
    size: 512

- name: Copy Dovecot configuration files.
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: wheel
    mode: 0644
    backup: yes
  with_items:
    - {src: 'dovecot/10-auth.conf', dest: '/etc/dovecot/conf.d/10-auth.conf'}
    - {src: 'dovecot/10-mail.conf', dest: '/etc/dovecot/conf.d/10-mail.conf'}
    - {src: 'dovecot/10-master.conf', dest: '/etc/dovecot/conf.d/10-master.conf'}
    - {src: 'dovecot/10-ssl.conf', dest: '/etc/dovecot/conf.d/10-ssl.conf'}
    - {src: 'dovecot/20-imap.conf', dest: '/etc/dovecot/conf.d/20-imap.conf'}
    - {src: 'dovecot/auth-sql.conf.ext', dest: '/etc/dovecot/conf.d/auth-sql.conf.ext'}

- name: Copy Dovecot configuration templates.
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: wheel
    mode: 0644
    backup: yes
  with_items:
    - {src: 'dovecot/15-lda.conf.j2', dest: '/etc/dovecot/conf.d/15-lda.conf'}
    - {src: 'dovecot/dovecot.conf.j2', dest: '/etc/dovecot/dovecot.conf'}

- name: Copy Dovecot SQL connection template.
  ansible.builtin.template:
    src: dovecot/dovecot-sql.conf.ext.j2
    dest: /etc/dovecot/dovecot-sql.conf.ext
    owner: root
    group: wheel
    mode: 0644
  when: not dovecot_sql.stat.exists

- name: Copy postfix regular expression checks.
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: wheel
    mode: 0644
  with_items:
    - {src: 'postfix/header_checks', dest: '/etc/postfix/header_checks'}
    - {src: 'postfix/body_checks', dest: '/etc/postfix/body_checks'}
    - {src: 'postfix/helo_restrictions', dest: '/etc/postfix/helo_restrictions'}

- name: Copy postfix main configuration.
  ansible.builtin.template:
    src: postfix/main.cf.j2
    dest: /etc/postfix/main.cf
    owner: root
    group: wheel
    mode: 0644

- name: Copy postfix master configuration.
  ansible.builtin.copy:
    src: postfix/master.cf
    dest: /etc/postfix/master.cf
    owner: root
    group: wheel
    mode: 0644

- name: Copy mailname.
  ansible.builtin.template:
    src: postfix/mailname.j2
    dest: /etc/mailname
    owner: root
    group: wheel
    mode: 0644

- name: Copy postfix virtual mailbox mapping.
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: wheel
    mode: 0644
  with_items:
    - {src: 'postfix/mysql-virtual-alias-maps.cf.j2', dest: '/etc/postfix/mysql-virtual-alias-maps.cf'}
    - {src: 'postfix/mysql-virtual-mailbox-domains.cf.j2', dest: '/etc/postfix/mysql-virtual-mailbox-domains.cf'}
    - {src: 'postfix/mysql-virtual-mailbox-maps.cf.j2', dest: '/etc/postfix/mysql-virtual-mailbox-maps.cf'}
  when: not dovecot_sql.stat.exists

- name: Whitelist policyd IPs from No-IP backup SMTP.
  ansible.builtin.lineinfile:
    dest: /etc/python-policyd-spf/policyd-spf.conf
    regexp: "^skip_addresses "
    line: "skip_addresses = 127.0.0.0/8,::ffff:127.0.0.0/104,::1,8.23.224.50,69.65.5.119,69.65.5.110"
    state: present

- include_tasks: opendkim.yml
